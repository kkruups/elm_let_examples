var _user$project$Main$test = F2(
	function (x, y) {
		return x + y;
	});
var _user$project$Main_ops = _user$project$Main_ops || {};
_user$project$Main_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$Main$view = function (tuple) {
	var divComp = function (_p0) {
		var _p1 = _p0;
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$style(
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$core$Debug$log,
							'style:bkgndcolor: ',
							A2(_user$project$Main_ops['=>'], 'background-color', _p1._0)),
							A2(
							_elm_lang$core$Debug$log,
							'style:color',
							A2(_user$project$Main_ops['=>'], 'color', _p1._1))
						]))
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(
					A2(_elm_lang$core$Debug$log, 'style:text :', _p1._2))
				]));
	};
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$style(
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_user$project$Main_ops['=>'], 'padding', '20px'),
						A2(_user$project$Main_ops['=>'], 'text-align', 'center')
					]))
			]),
		A2(
			_elm_lang$core$List$map,
			divComp,
			A2(_elm_lang$core$Debug$log, 'tuple list: ', tuple)));
};
var _user$project$Main$main = {
	main: _user$project$Main$view(
		_elm_lang$core$Native_List.fromArray(
			[
				{ctor: '_Tuple3', _0: 'red', _1: 'white', _2: 'super'},
				{ctor: '_Tuple3', _0: 'dodgerblue', _1: 'black', _2: 'soup'},
				{ctor: '_Tuple3', _0: 'purple', _1: 'yellow', _2: 'happy trails'},
				{ctor: '_Tuple3', _0: 'yellow', _1: 'brown', _2: 'daruma'},
				{ctor: '_Tuple3', _0: 'black', _1: 'white', _2: 'b/w'},
				{ctor: '_Tuple3', _0: 'beige', _1: 'brown', _2: 'banana'}
			]))
};
